// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef ColorGrader_h
#define ColorGrader_h
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Slider.H>
#include <FL/Fl_Light_Button.H>
#include "CurveViewRGB.H"
#include <FL/Fl_Button.H>
#include "globals.H"
#include "VideoViewGL.H"
#include "ColorWheel.H"
#include <FL/Fl_Check_Button.H>

class ColorGrader : public Fl_Group {
public:
  ColorGrader(int X, int Y, int W, int H, const char *L = 0);
  Fl_Slider *r_contrast_slider;
private:
  void cb_r_contrast_slider_i(Fl_Slider*, void*);
  static void cb_r_contrast_slider(Fl_Slider*, void*);
public:
  Fl_Slider *g_contrast_slider;
private:
  void cb_g_contrast_slider_i(Fl_Slider*, void*);
  static void cb_g_contrast_slider(Fl_Slider*, void*);
public:
  Fl_Slider *b_contrast_slider;
private:
  void cb_b_contrast_slider_i(Fl_Slider*, void*);
  static void cb_b_contrast_slider(Fl_Slider*, void*);
public:
  Fl_Light_Button *contrast_combine;
  CurveViewRGB *contrast_view;
  Fl_Light_Button *brightness_combine;
  CurveViewRGB *brightness_view;
  Fl_Slider *r_gamma_slider;
private:
  void cb_r_gamma_slider_i(Fl_Slider*, void*);
  static void cb_r_gamma_slider(Fl_Slider*, void*);
public:
  Fl_Slider *g_gamma_slider;
private:
  void cb_g_gamma_slider_i(Fl_Slider*, void*);
  static void cb_g_gamma_slider(Fl_Slider*, void*);
public:
  Fl_Slider *b_gamma_slider;
private:
  void cb_b_gamma_slider_i(Fl_Slider*, void*);
  static void cb_b_gamma_slider(Fl_Slider*, void*);
public:
  Fl_Light_Button *gamma_combine;
  CurveViewRGB *gamma_view;
private:
  void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
  void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
  void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
  void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  void cb_4_i(Fl_Button*, void*);
  static void cb_4(Fl_Button*, void*);
  void cb_5_i(Fl_Button*, void*);
  static void cb_5(Fl_Button*, void*);
  void cb_6_i(Fl_Button*, void*);
  static void cb_6(Fl_Button*, void*);
  void cb_7_i(Fl_Button*, void*);
  static void cb_7(Fl_Button*, void*);
  void cb_8_i(Fl_Button*, void*);
  static void cb_8(Fl_Button*, void*);
public:
  CurveViewRGB *combined_view;
  Fl_Slider *r_brightness_slider;
private:
  void cb_r_brightness_slider_i(Fl_Slider*, void*);
  static void cb_r_brightness_slider(Fl_Slider*, void*);
public:
  Fl_Slider *g_brightness_slider;
private:
  void cb_g_brightness_slider_i(Fl_Slider*, void*);
  static void cb_g_brightness_slider(Fl_Slider*, void*);
public:
  Fl_Slider *b_brightness_slider;
private:
  void cb_b_brightness_slider_i(Fl_Slider*, void*);
  static void cb_b_brightness_slider(Fl_Slider*, void*);
public:
  unsigned char* m_values_r;
  unsigned char* m_values_g;
  unsigned char* m_values_b;
private:
  void cb_Bypass_i(Fl_Check_Button*, void*);
  static void cb_Bypass(Fl_Check_Button*, void*);
public:
  void combine_curve();
  void recalc_sliders();
};
#endif
