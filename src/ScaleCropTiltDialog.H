// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef ScaleCropTiltDialog_H
#define ScaleCropTiltDialog_H
#include <FL/Fl.H>
#include "ScaleCropTiltFilter.H"
#include "IEffectDialog.H"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Slider.H>
#include "int_float_scale.H"
#include <FL/Fl_Spinner.H>
#include "VideoViewGL.H"
#include <FL/Fl_Light_Button.H>

class ScaleCropTiltDialog : public nle::IEffectDialog {
public:
  ScaleCropTiltDialog( nle::ScaleCropTiltFilter* filter );
  Fl_Double_Window *m_dialog;
  Fl_Slider *scale_x;
private:
  void cb_scale_x_i(Fl_Slider*, void*);
  static void cb_scale_x(Fl_Slider*, void*);
public:
  Fl_Slider *scale_y;
private:
  void cb_scale_y_i(Fl_Slider*, void*);
  static void cb_scale_y(Fl_Slider*, void*);
public:
  Fl_Spinner *scale_h_spin;
  Fl_Spinner *scale_v_spin;
  Fl_Slider *crop_left;
private:
  void cb_crop_left_i(Fl_Slider*, void*);
  static void cb_crop_left(Fl_Slider*, void*);
public:
  Fl_Slider *crop_right;
private:
  void cb_crop_right_i(Fl_Slider*, void*);
  static void cb_crop_right(Fl_Slider*, void*);
public:
  Fl_Slider *crop_top;
private:
  void cb_crop_top_i(Fl_Slider*, void*);
  static void cb_crop_top(Fl_Slider*, void*);
public:
  Fl_Slider *crop_bottom;
private:
  void cb_crop_bottom_i(Fl_Slider*, void*);
  static void cb_crop_bottom(Fl_Slider*, void*);
public:
  Fl_Slider *tilt_x;
private:
  void cb_tilt_x_i(Fl_Slider*, void*);
  static void cb_tilt_x(Fl_Slider*, void*);
public:
  Fl_Slider *tilt_y;
private:
  void cb_tilt_y_i(Fl_Slider*, void*);
  static void cb_tilt_y(Fl_Slider*, void*);
public:
  Fl_Light_Button *scale_lock;
  Fl_Light_Button *crop_x_lock;
  Fl_Light_Button *crop_y_lock;
  ~ScaleCropTiltDialog();
  void show();
  int shown();
private:
  nle::ScaleCropTiltFilter* m_filter;
};
#endif
