# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.H} 
code_name {.cxx}
decl {\#include "IProgressListener.H"} {public global
} 

decl {\#include <time.h>} {public global
} 

decl {\#include <sys/time.h>} {public global
} 

decl {\#include "YoutubeUploader.H"} {public global
} 

class YoutubeDialog {open
} {
  Function {YoutubeDialog(nle::YoutubeUploader* uploader)} {open
  } {
    Fl_Window dialog_window {
      label {Upload to Youtube} open
      xywh {553 267 570 420} type Double modal visible
    } {
      Fl_Box {} {
        label {Upload to Youtube}
        xywh {0 0 570 50} labelfont 1 labelsize 17
      }
      Fl_Button {} {
        label Cancel
        callback {m_go = false;}
        xywh {10 385 270 25}
      }
      Fl_Return_Button {} {
        label Go
        callback {//Check emptiness of fields
//Get Auth from nle::YoutubeUploader::login()
//then close, and set go to true
if ( name_input->size() == 0 ) {
	fl_alert( "Please enter a name for your video!" );
	return;
}
if ( description_input->size() == 0 ) {
	fl_alert( "Please enter a description for your video!" );
	return;
}
if ( username_input->size() == 0 ) {
	fl_alert( "Please enter your Youtube username!" );
	return;
}
if ( password_input->size() == 0 ) {
	fl_alert( "Please enter your Youtube password!" );
	return;
}
m_uploader->setTitle( name_input->value() );
m_uploader->setDescription( description_input->value() );
m_uploader->setKeywords( tags_input->value() );
const char* username  = username_input->value();
const char* password  = password_input->value();
if ( m_uploader->login( username, password ) ) {
	m_go = true;
	o->window()->hide();
} else {
	fl_alert( "Could not authenticate against Youtube Login\\nPlease check your username and password!" );
}}
        xywh {290 385 270 25}
        code0 {\#include <FL/fl_ask.H>}
      }
      Fl_Box {} {
        label {@>}
        xywh {10 185 270 190} box DOWN_BOX labelsize 89
      }
      Fl_Box {} {
        label {Youtube Login}
        xywh {10 70 270 105} box ENGRAVED_FRAME align 5
      }
      Fl_Input username_input {
        label Username
        private xywh {115 80 155 25}
      }
      Fl_Input password_input {
        label Password
        private xywh {115 110 155 25} type Secret
      }
      Fl_Check_Button remember_login_check_button {
        label {Remember Login}
        private xywh {115 140 155 25} down_box DOWN_BOX deactivate
      }
      Fl_Input name_input {
        label Name
        private xywh {290 70 270 25} align 5
      }
      Fl_Input description_input {
        label Description
        private xywh {290 120 270 155} type Multiline align 5
      }
      Fl_Input tags_input {
        label Tags
        private xywh {290 350 270 25} align 5
      }
      Fl_Choice {} {
        label Category open selected
        xywh {290 300 270 25} down_box BORDER_BOX align 5 deactivate
      } {}
    }
    code {m_go = false;
m_uploader = uploader;} {}
  }
  Function {~YoutubeDialog()} {open
  } {
    code {delete dialog_window;} {}
  }
  Function {show()} {open
  } {
    code {dialog_window->show();} {}
  }
  Function {shown()} {open return_type int
  } {
    code {return dialog_window->shown();} {}
  }
  Function {getName()} {open return_type {const char*}
  } {
    code {return name_input->value();} {}
  }
  Function {getDescription()} {open return_type {const char*}
  } {
    code {return description_input->value();} {}
  }
  Function {getTags()} {open return_type {const char*}
  } {
    code {return tags_input->value();} {}
  }
  Function {go()} {open return_type bool
  } {
    code {return m_go;} {}
  }
  decl {bool m_go;} {}
  decl {nle::YoutubeUploader* m_uploader;} {}
} 

class YoutubeProgressDialog {open : {public nle::IProgressListener}
} {
  Function {YoutubeProgressDialog()} {open
  } {
    Fl_Window dialog_window {
      label Progress open
      xywh {298 30 365 155} type Double modal visible
    } {
      Fl_Progress encoding_progress {
        label Encoding
        xywh {10 50 345 25}
      }
      Fl_Progress uploading_progress {
        label Uploading
        xywh {10 85 345 25}
      }
      Fl_Button {} {
        label Cancel
        callback {m_cancel = true;}
        xywh {10 120 345 25}
      }
      Fl_Box {} {
        label {Youtube Upload in Progress}
        xywh {0 0 365 40} labelfont 1 labelsize 15
      }
    }
    code {encoding_progress->minimum( 0.0 );
encoding_progress->maximum( 1.0 );
encoding_progress->value( 0.0 );
uploading_progress->minimum( 0.0 );
uploading_progress->maximum( 1.0 );
uploading_progress->value( 0.0 );
m_current_progress = encoding_progress;} {}
  }
  Function {~YoutubeProgressDialog()} {open
  } {
    code {delete dialog_window;} {}
  }
  Function {show()} {open
  } {
    code {dialog_window->show();} {}
  }
  Function {shown()} {open return_type int
  } {
    code {return dialog_window->shown();} {}
  }
  Function {progress( double percent )} {open return_type bool
  } {
    code {//timeval now;
//gettimeofday( &now, 0 );
//double elapsed = (now.tv_sec - m_start.tv_sec) + ( (now.tv_usec - m_start.tv_usec) * (1.0 / CLOCKS_PER_SEC) );
//double remaining = elapsed / progress_bar->value() - elapsed + 1.0f;
//int es, em, eh, rs, rm, rh;

//nle::secs2HMS( elapsed, eh, em, es );
//nle::secs2HMS( remaining, rh, rm, rs );

//char buf[128];
//sprintf( buf, "Elapsed Time: %03d:%02d:%02d Remaining Time: %03d:%02d:%02d", eh, em, es, rh, rm, rs );

m_current_progress->value( percent );
//time_display->value( buf );
Fl::check();
return m_cancel;} {}
  }
  Function {start()} {open return_type void
  } {
    code {m_cancel = false;
//dialog_window->show();
gettimeofday( &m_start, 0 );} {}
  }
  Function {end()} {open return_type void
  } {
    code {//dialog_window->hide();} {}
  }
  decl {bool m_cancel;} {}
  decl {timeval m_start;} {}
  decl {Fl_Progress* m_current_progress;} {}
  Function {activateEncodingProgress()} {open
  } {
    code {m_current_progress = encoding_progress;} {}
  }
  Function {activateUploadingProgress()} {open
  } {
    code {m_current_progress = uploading_progress;} {}
  }
} 
