// generated by Fast Light User Interface Designer (fluid) version 1.0109

#ifndef LiftGammaGainWidget_H
#define LiftGammaGainWidget_H
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include "Fl_Hsv_Color_Chooser.H"
#include "LiftGammaGainWrapperWidget.H"
#include <FL/Fl_Box.H>
#include <FL/Fl_Value_Slider.H>

class LiftGammaGainWidget : public Fl_Group {
public:
  LiftGammaGainWidget(int X, int Y, int W, int H, const char *L = 0);
  nle::LiftGammaGainWrapperWidget* m_dialog; 
  Fl_Hsv_Color_Chooser *lift;
private:
  void cb_lift_i(Fl_Hsv_Color_Chooser*, void*);
  static void cb_lift(Fl_Hsv_Color_Chooser*, void*);
public:
  Fl_Value_Slider *lift_slider;
private:
  void cb_lift_slider_i(Fl_Value_Slider*, void*);
  static void cb_lift_slider(Fl_Value_Slider*, void*);
public:
  Fl_Hsv_Color_Chooser *gamma;
private:
  void cb_gamma_i(Fl_Hsv_Color_Chooser*, void*);
  static void cb_gamma(Fl_Hsv_Color_Chooser*, void*);
public:
  Fl_Value_Slider *gamma_slider;
private:
  void cb_gamma_slider_i(Fl_Value_Slider*, void*);
  static void cb_gamma_slider(Fl_Value_Slider*, void*);
public:
  Fl_Hsv_Color_Chooser *gain;
private:
  void cb_gain_i(Fl_Hsv_Color_Chooser*, void*);
  static void cb_gain(Fl_Hsv_Color_Chooser*, void*);
public:
  Fl_Value_Slider *gain_slider;
private:
  void cb_gain_slider_i(Fl_Value_Slider*, void*);
  static void cb_gain_slider(Fl_Value_Slider*, void*);
};
#endif
