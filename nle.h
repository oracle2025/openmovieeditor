// generated by Fast Light User Interface Designer (fluid) version 1.0106

#ifndef nle_h
#define nle_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include "Project.H"
#include "Renderer.H"
#include <FL/Fl_Tile.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Value_Input.H>
#include <iostream>
#include <string>
#include "FileBrowser.H"
#include "VideoViewGL.H"
#include <FL/Fl_Button.H>
#include "Ruler.H"
#include "TimelineView.H"
#include "Flmm_Scalebar.H"
#include "globals.H"
using namespace std;

class NleUI {
public:
  NleUI();
private:
  Fl_Double_Window *mainWindow;
  static Fl_Menu_Item menu_[];
  inline void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
public:
  nle::FileBrowser *fileBrowser;
private:
  inline void cb_fileBrowser_i(nle::FileBrowser*, void*);
  static void cb_fileBrowser(nle::FileBrowser*, void*);
public:
  nle::VideoViewGL *m_videoView;
private:
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
public:
  nle::TimelineView *m_timelineView;
private:
  Flmm_Scalebar *scaleBar;
  inline void cb_scaleBar_i(Flmm_Scalebar*, void*);
  static void cb_scaleBar(Flmm_Scalebar*, void*);
public:
  void show( int argc, char **argv );
};
extern Flmm_Scalebar* g_scrollBar;
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Return_Button.H>

class EncodeDialog {
public:
  EncodeDialog();
private:
  Fl_Double_Window *encodeDialog;
  static Fl_Menu_Item menu_Audio[];
};
#endif
