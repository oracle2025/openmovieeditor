// generated by Fast Light User Interface Designer (fluid) version 1.0105

#include "nle.h"

Fl_Menu_Item NleUI::menu_[] = {
 {"&File", 0,  0, 0, 64, 0, 0, 14, 56},
 {0},
 {0}
};

inline void NleUI::cb_fileBrowser_i(Fl_File_Browser* o, void*) {
  std::cout << (char *)((Fl_File_Browser*)o)->text(((Fl_File_Browser*)o)->value()) << std::endl;
}
void NleUI::cb_fileBrowser(Fl_File_Browser* o, void* v) {
  ((NleUI*)(o->parent()->parent()->parent()->parent()->parent()->user_data()))->cb_fileBrowser_i(o,v);
}

inline void NleUI::cb__i(Fl_Button*, void*) {
  m_videoView->play();
}
void NleUI::cb_(Fl_Button* o, void* v) {
  ((NleUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb__i(o,v);
}

inline void NleUI::cb_1_i(Fl_Button*, void*) {
  m_videoView->stop();
}
void NleUI::cb_1(Fl_Button* o, void* v) {
  ((NleUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_1_i(o,v);
}

inline void NleUI::cb_2_i(Fl_Slider* o, void*) {
  m_timelineView->scroll((int64_t)((Fl_Slider *)o)->value());
}
void NleUI::cb_2(Fl_Slider* o, void* v) {
  ((NleUI*)(o->parent()->user_data()))->cb_2_i(o,v);
}

NleUI::NleUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mainWindow = new Fl_Double_Window(475, 380, "MovieEditor");
    w = o;
    o->user_data((void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 475, 25);
      o->menu(menu_);
    }
    { Fl_Tile* o = new Fl_Tile(0, 25, 475, 335);
      { Fl_Group* o = new Fl_Group(0, 25, 475, 175);
        { Fl_Tabs* o = new Fl_Tabs(0, 25, 235, 175);
          o->box(FL_UP_BOX);
          { Fl_Box* o = new Fl_Box(0, 50, 235, 150, "Filemanager");
            o->hide();
          }
          { Fl_Group* o = new Fl_Group(0, 50, 235, 150, "Project");
            o->hide();
            { Fl_Value_Input* o = new Fl_Value_Input(55, 60, 55, 25, "Width");
              o->maximum(1024);
              o->step(1);
              o->value(640);
            }
            { Fl_Value_Input* o = new Fl_Value_Input(55, 90, 55, 25, "Height");
              o->maximum(768);
              o->step(1);
              o->value(480);
            }
            { Fl_Box* o = new Fl_Box(135, 145, 55, 25);
              Fl_Group::current()->resizable(o);
            }
            o->end();
            Fl_Group::current()->resizable(o);
          }
          { Fl_Group* o = new Fl_Group(0, 50, 235, 150, "Files");
            { Fl_File_Browser* o = fileBrowser = new Fl_File_Browser(5, 55, 225, 140);
              o->type(1);
              o->callback((Fl_Callback*)cb_fileBrowser);
              Fl_Group::current()->resizable(o);
            }
            o->end();
          }
          o->end();
        }
        { Fl_Group* o = new Fl_Group(235, 25, 240, 175);
          { nle::VideoView* o = m_videoView = new nle::VideoView(235, 25, 240, 150, "VideoView");
            o->box(FL_DOWN_BOX);
            o->color(FL_BACKGROUND_COLOR);
            o->selection_color(FL_BACKGROUND_COLOR);
            o->labeltype(FL_NORMAL_LABEL);
            o->labelfont(0);
            o->labelsize(14);
            o->labelcolor(FL_BLACK);
            o->align(FL_ALIGN_CENTER);
            o->when(FL_WHEN_RELEASE);
            Fl_Group::current()->resizable(o);
          }
          { Fl_Button* o = new Fl_Button(355, 175, 60, 25, "@>");
            o->callback((Fl_Callback*)cb_);
          }
          new Fl_Button(415, 175, 60, 25, "@>|");
          new Fl_Button(235, 175, 60, 25, "@|<");
          { Fl_Button* o = new Fl_Button(295, 175, 60, 25, "@||");
            o->callback((Fl_Callback*)cb_1);
          }
          o->end();
        }
        o->end();
      }
      { nle::TimelineView* o = m_timelineView = new nle::TimelineView(0, 200, 475, 160);
        o->box(FL_NO_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BACKGROUND_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_CENTER);
        o->when(FL_WHEN_RELEASE);
      }
      o->end();
      Fl_Group::current()->resizable(o);
    }
    { Fl_Slider* o = new Fl_Slider(0, 360, 475, 20);
      o->type(1);
      o->maximum(1024);
      o->step(1);
      o->slider_size(0.4);
      o->callback((Fl_Callback*)cb_2);
    }
    o->end();
  }
}

void NleUI::show( int argc, char **argv ) {
  fileBrowser->load("/");
mainWindow->show(argc, argv);
}
